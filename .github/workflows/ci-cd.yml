name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Go dependencies
        run: go mod download

      - name: Run Go tests
        run: go test -v ./...

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Run frontend tests
        working-directory: ./frontend
        run: npm run test

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push frontend
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          push: true
          tags: yourusername/pollpulse-frontend:latest

      - name: Build and push user-service
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./deployments/docker/user-service/Dockerfile
          push: true
          tags: yourusername/pollpulse-user-service:latest

      - name: Build and push survey-service
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./deployments/docker/survey-service/Dockerfile
          push: true
          tags: yourusername/pollpulse-survey-service:latest

      - name: Build and push result-service
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./deployments/docker/result-service/Dockerfile
          push: true
          tags: yourusername/pollpulse-result-service:latest

      - name: Build and push api-gateway
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./deployments/docker/api-gateway/Dockerfile
          push: true
          tags: yourusername/pollpulse-api-gateway:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3

      - name: Deploy to production
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          script: |
            cd /opt/pollpulse
            docker-compose -f docker-compose.prod.yml pull
            docker-compose -f docker-compose.prod.yml up -d 